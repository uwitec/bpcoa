/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2013-02-19 07:05:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.app.bpcoa.project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mixky.engine.organization.User;
import com.mixky.app.certification.MixkyUserCertification;
import com.mixky.app.mkoa.netfolder.FolderItem;
import com.mixky.app.bpcoa.project.BpcProjectDao;
import com.mixky.app.bpcoa.project.BpcProjectManager;

public final class project_task_worklog_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	User user = MixkyUserCertification.instance().getUserInfo(request);
	String panelid = request.getParameter("panelid");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script language='javascript'>\r\n");
      out.write("Ext.onReady(function(){\r\n");
      out.write("\tvar panel = Ext.getCmp('");
      out.print(panelid);
      out.write("');\r\n");
      out.write("\t\r\n");
      out.write("\tpanel.F_TASK_ID = 0;\r\n");
      out.write("\tpanel.F_WORKLOG_ID = 0;\r\n");
      out.write("\t\r\n");
      out.write("\tvar worklogId = Ext.id();\r\n");
      out.write("\tvar worklog = new Ext.Panel({\r\n");
      out.write("\t\tregion : 'center',\r\n");
      out.write("\t\tid : worklogId,\r\n");
      out.write("\t\tborder : false,\r\n");
      out.write("\t\tlayout : 'fit',\r\n");
      out.write("\t\tautoLoad : {\r\n");
      out.write("\t\t\turl : 'framework/engine/view/view.do',\r\n");
      out.write("\t\t\tparams : {\r\n");
      out.write("\t\t\t\tviewkey : 'bpcProject.qWorklog.vList', \r\n");
      out.write("\t\t\t\tpanelid : worklogId\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tscripts\t: true\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tvar form = new Ext.form.FormPanel({\r\n");
      out.write("\t\tregion : 'north',\r\n");
      out.write("\t\theight : 130,\r\n");
      out.write("\t\tborder : false,\r\n");
      out.write("\t\tlabelWidth : 50,\r\n");
      out.write("\t\tpadding : 5,\r\n");
      out.write("\t\titems : [{\r\n");
      out.write("\t\t\txtype : 'hidden',\r\n");
      out.write("\t\t\tname : 'F_WORKLOG_ID'\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\txtype : 'hidden',\r\n");
      out.write("\t\t\tname : 'F_TASK_ID'\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tborder : false,\r\n");
      out.write("\t\t\tlayout : 'column',\r\n");
      out.write("\t\t\titems : [{\r\n");
      out.write("\t\t\t\tborder : false,\r\n");
      out.write("\t\t\t\tlayout : 'form',\r\n");
      out.write("\t\t\t\tcolumnWidth : .6,\r\n");
      out.write("\t\t\t\titems : {\r\n");
      out.write("\t\t\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\t\t\tfieldLabel : '从',\r\n");
      out.write("\t\t\t\t\tname : 'F_START_TIME',\r\n");
      out.write("\t\t\t\t\tformat : 'Y-m-d H:i',\r\n");
      out.write("\t\t\t\t\taltFormats : 'Y-m-d H:i:s|m/d/Y|n/j/Y|n/j/y|m/j/y|n/d/y|m/j/Y|n/d/Y|m-d-y|m-d-Y|m/d|m-d|md|mdy|mdY|d|Y-m-d',\r\n");
      out.write("\t\t\t\t\txtype : 'datetimefield',\r\n");
      out.write("\t\t\t\t\tanchor : '-10',\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\tborder : false,\r\n");
      out.write("\t\t\t\tlayout : 'form',\r\n");
      out.write("\t\t\t\tcolumnWidth : .4,\r\n");
      out.write("\t\t\t\titems : {\r\n");
      out.write("\t\t\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\t\t\tfieldLabel : '至',\r\n");
      out.write("\t\t\t\t\tname : 'F_END_TIME',\r\n");
      out.write("\t\t\t\t\tformat : 'H:i',\r\n");
      out.write("\t\t\t\t\tincrement : 15,\r\n");
      out.write("\t\t\t\t\txtype : 'timefield',\r\n");
      out.write("\t\t\t\t\tvalue : '17:00',\r\n");
      out.write("\t\t\t\t\tanchor : '-10',\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}]\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\tfieldLabel : '日志',\r\n");
      out.write("\t\t\txtype : 'textarea',\r\n");
      out.write("\t\t\tname : 'F_NOTE',\r\n");
      out.write("\t\t\tanchor : '-10',\r\n");
      out.write("\t\t\theight : 50\r\n");
      out.write("\t\t}],\r\n");
      out.write("\t\tbuttonAlign : 'center',\r\n");
      out.write("\t\tbuttons : [{\r\n");
      out.write("\t\t\ttext : '添加日志',\r\n");
      out.write("\t\t\ticonCls : 'icon-sys-btnadd',\r\n");
      out.write("\t\t\thandler : function(){\r\n");
      out.write("\t\t\t\tif(!form.getForm().isValid()){\r\n");
      out.write("\t\t\t\t\tMixkyApp.showErrorMessage(\"表单数据填写非法，保存失败\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tBpcProjectAppDirect.saveProjectTaskWorklog(form.getForm().getValues(), function(result, e){\r\n");
      out.write("\t\t\t\t\tif(result && result.success){\r\n");
      out.write("\t\t\t\t\t\tMixkyApp.showInfoMessage(\"任务日志保存完毕！\");\r\n");
      out.write("\t\t\t\t\t\tform.getForm().setValues({\r\n");
      out.write("\t\t\t\t\t\t\tID : 0,\r\n");
      out.write("\t\t\t\t\t\t\tF_NOTE : ''\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\tworklog.refresh();\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tMixkyApp.showErrorMessage(\"服务器端保存数据失败，请重试\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}]\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tvar view = new Ext.Panel({\r\n");
      out.write("\t\tlayout : 'border',\r\n");
      out.write("\t\tborder : false,\r\n");
      out.write("\t\titems : [form, worklog]\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tform.refresh = function(params){\r\n");
      out.write("\t\tform.getForm().setValues({\r\n");
      out.write("\t\t\tF_TASK_ID : panel.F_TASK_ID,\r\n");
      out.write("\t\t\tF_WORKLOG_ID : panel.F_WORKLOG_ID,\r\n");
      out.write("\t\t\tF_NOTE : params && params.F_NOTE ? params.F_NOTE : '',\r\n");
      out.write("\t\t\tF_START_TIME : new Date().format('Y-m-d') + ' 09:00'\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tpanel.refresh = function(params){\r\n");
      out.write("\t\tif(Ext.isDefined(params)){\r\n");
      out.write("\t\t\tif(Ext.isDefined(params.F_WORKLOG_ID)){\r\n");
      out.write("\t\t\t\tpanel.F_WORKLOG_ID = params.F_WORKLOG_ID;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(Ext.isDefined(params.F_TASK_ID)){\r\n");
      out.write("\t\t\t\tpanel.F_TASK_ID = params.F_TASK_ID;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tform.refresh(params);\r\n");
      out.write("\t\tworklog.refresh(params);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tpanel.add(view);\r\n");
      out.write("\tpanel.doLayout();\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
