/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2013-01-30 02:57:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.app.mkoa.netfolder;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mixky.engine.organization.User;
import com.mixky.app.certification.MixkyUserCertification;
import com.mixky.app.mkoa.netfolder.FolderItem;

public final class view_folder_share_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

	String panelid = request.getParameter("panelid");
	User user = MixkyUserCertification.instance().getUserInfo(request);

      out.write("\n");
      out.write("\n");
      out.write("<script language='javascript'>\n");
      out.write("\n");
      out.write("Ext.onReady(function(){\n");
      out.write("\n");
      out.write("\tvar panel = Ext.getCmp('");
      out.print(panelid);
      out.write("');\n");
      out.write("\n");
      out.write("\t// 数据访问\n");
      out.write("\tvar store = new Ext.data.DirectStore({\n");
      out.write("\t\tdirectFn : AppFolderDirect.getShareFolderList,\n");
      out.write("\t\tparamOrder:['folderId', 'userId', 'sharetype'],\n");
      out.write("\t\tbaseParams:{folderId:0, userId:");
      out.print(user.getId());
      out.write(", sharetype:0},\n");
      out.write("\t\troot : 'results',\n");
      out.write("\t\ttotalProperty : 'folderId',\n");
      out.write("\t\tidProperty : 'ID',\n");
      out.write("\t\tfields:[\"F_IMG\",\"F_NAME\",\"F_NOTE\",\"F_USERNAME\",\"F_CREATTIME\",\"F_SIZE\",\"F_ACTION\",\"ID\", \"F_TYPE\", \"F_PARENTID\", \"F_BELONGUSERID\", \"F_SHARETYPE\", \"F_USERID\", \"F_FILENAME\"]\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t// 显示列\n");
      out.write("\tvar columns = [\n");
      out.write("      \t{id:\"F_NAME\",header:\"名称\",dataIndex:\"F_NAME\",width:300, renderer : function(value, p, record){\n");
      out.write("\t\t\tvar type = 'icon-app-mkoa-folderup';\n");
      out.write("\t\t\tvar title = value;\n");
      out.write("\t\t\tswitch(record.get(\"F_TYPE\")){\n");
      out.write("\t\t\tcase 0:\n");
      out.write("\t\t\t\tif(record.get('F_SHARETYPE') == 0){\n");
      out.write("\t\t\t\t\ttype = 'icon-app-mkoa-folder';\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\ttype = 'icon-app-mkoa-foldershare';\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t\tcase 1:\n");
      out.write("\t\t\t\ttype = 'icon-app-mkoa-file';\n");
      out.write("\t\t\t\ttitle = '<a href=\"engine/file/sysdownload.do?documentdbtype=blob&fieldname=F_FILE&documentkey=mkNetFolder.docNetFile'\n");
      out.write("\t\t\t\t\t + '&id=' + record.get(\"ID\") + '&filename=' + record.get(\"F_FILENAME\") + '\">'\n");
      out.write("\t\t\t\t\t + title + '</a>';\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\treturn String.format(\"<div style='padding-left:23px;background-repeat:no-repeat' class='{1}'> {0}</div>\", title, type);\n");
      out.write("\t\t}},\n");
      out.write("      \t{id:\"F_USERNAME\",header:\"创建人\",dataIndex:\"F_USERNAME\",width:80},\n");
      out.write("      \t{id:\"F_CREATTIME\",header:\"创建日期\",dataIndex:\"F_CREATTIME\",width:120},\n");
      out.write("      \t{id:\"F_SIZE\",header:\"文件大小\",dataIndex:\"F_SIZE\",width:80},\n");
      out.write("      \t{id:\"F_NOTE\",header:\"说明\",dataIndex:\"F_NOTE\"}\n");
      out.write("      ];\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\tvar fieldSearch = new Ext.form.TextField({\n");
      out.write("\t\twidth : 100,\n");
      out.write("\t\temptyText : '输入快速检索字符',\n");
      out.write("        listeners: {\n");
      out.write("\t        specialkey: function(field, e){\n");
      out.write("\t            // e.HOME, e.END, e.PAGE_UP, e.PAGE_DOWN,\n");
      out.write("\t            // e.TAB, e.ESC, arrow keys: e.LEFT, e.RIGHT, e.UP, e.DOWN\n");
      out.write("\t            if (e.getKey() == e.ENTER) {\n");
      out.write("\t            \tvar value = field.getValue();\n");
      out.write("\t    \t\t\tif(Ext.isDefined(value) && value != ''){\n");
      out.write("\t    \t\t\t\tvar modulePanel = MixkyApp.desktop.openModule('mkNetFolder');\n");
      out.write("\t    \t\t\t\tvar urlPanel  = modulePanel.openView('mkNetFolder.qFolder.vShareSearch');\n");
      out.write("\t    \t\t\t\tif(urlPanel){\n");
      out.write("\t    \t\t\t\t\tif(urlPanel.refresh){\n");
      out.write("\t    \t\t\t\t\t\turlPanel.refresh({folderId: store.baseParams.folderId,queryvalue: value});\n");
      out.write("\t    \t\t\t\t\t}else{\n");
      out.write("\t    \t\t\t\t\t\turlPanel.initParams = {folderId: store.baseParams.folderId,queryvalue: value};\n");
      out.write("\t    \t\t\t\t\t}\n");
      out.write("\t    \t\t\t\t}\n");
      out.write("\t    \t\t\t}\n");
      out.write("\t            }\n");
      out.write("\t        }\n");
      out.write("\t    }\n");
      out.write("\t});\n");
      out.write("\tvar btnSearch = new Ext.Action({\n");
      out.write("\t\ttext : '快速检索',\n");
      out.write("\t\ticonCls : 'icon-sys-query',\n");
      out.write("\t\thandler : function(){\n");
      out.write("\t\t\tvar value = fieldSearch.getValue();\n");
      out.write("\t\t\tif(Ext.isDefined(value) && value != ''){\n");
      out.write("\t\t\t\tvar modulePanel = MixkyApp.desktop.openModule('mkNetFolder');\n");
      out.write("\t\t\t\tvar urlPanel  = modulePanel.openView('mkNetFolder.qFolder.vShareSearch');\n");
      out.write("\t\t\t\tif(urlPanel){\n");
      out.write("\t\t\t\t\tif(urlPanel.refresh){\n");
      out.write("\t\t\t\t\t\turlPanel.refresh({folderId: store.baseParams.folderId,queryvalue: value});\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\turlPanel.initParams = {folderId: store.baseParams.folderId,queryvalue: value};\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("    // 视图操作\n");
      out.write("    var AddFolderAction = new Ext.Action({\n");
      out.write("\t\ttext:'新建文件夹',\n");
      out.write("\t\ticonCls:'icon-sys-btnadd',\n");
      out.write("\t\thandler:function(){\n");
      out.write("    \t\tAppFolderDirect.getNewItemInfo(store.baseParams.folderId, store.baseParams.userId, function(result, e){\n");
      out.write("\t\t\t\tif(result) {\n");
      out.write("\t\t\t\t\tMixkyApp.desktop.openDocument('mkNetFolder.docNetFolder', 0, {'F_GRIDPANEL_ID':'");
      out.print(panelid);
      out.write("', 'F_PARENTID':result.f_parentid, 'F_LEVEL':result.f_level, 'F_BELONGUSERID':result.f_belonguserid, 'F_TYPE': ");
      out.print(FolderItem.TYPE_FOLDER);
      out.write("});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t        });\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("    var UploadFileButton = new Mixky.plugins.UploadButton({\n");
      out.write("\t\ttext:'上传文件',\n");
      out.write("\t\ticonCls:'icon-sys-upload',\n");
      out.write("\t\tuploadConfig : {\n");
      out.write("\t\t\tupload_url : 'servlet/mkoa/netfolder/folderfile.upload',\n");
      out.write("\t\t\tpost_params : {\n");
      out.write("\t\t\t\tuserId: '");
      out.print(user.getId());
      out.write("'\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tlisteners : {\n");
      out.write("\t\t\t\t'allUploadsComplete' : function(){\n");
      out.write("\t\t\t\t\tpanel.refreshView();\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t'startUpload' : function(){\n");
      out.write("\t\t\t\t\tthis.addPostParam('folderId', store.baseParams.folderId);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t// 刷新按钮\n");
      out.write("\tvar btnRefresh = new Ext.Action({\n");
      out.write("\t\ttext : '刷新',\n");
      out.write("\t\ticonCls : 'icon-sys-refresh',\n");
      out.write("\t\thandler : function(){\n");
      out.write("\t\t\tpanel.refresh();\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar btnEdit = new Ext.Action({\n");
      out.write("\t\ttext: '编辑',\n");
      out.write("\t\ticonCls : 'icon-sys-edit',\n");
      out.write("\t\thandler: function() {\n");
      out.write("\t\t\tvar record = grid.getSelectionModel().getSelected();\n");
      out.write("\t\t\tvar windName;\n");
      out.write("\t\t\tif (record.get('F_TYPE') == 0) {\n");
      out.write("\t\t\t\tMixkyApp.desktop.openDocument('mkNetFolder.docNetFolder', record.get('ID'), {'F_GRIDPANEL_ID':'");
      out.print(panelid);
      out.write("'});\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tMixkyApp.desktop.openDocument('mkNetFolder.docNetFile', record.get('ID'), {'F_GRIDPANEL_ID':'");
      out.print(panelid);
      out.write("'});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t})\n");
      out.write("\n");
      out.write("\tvar btnDelete = new Ext.Action({\n");
      out.write("\t\ttext: '删除',\n");
      out.write("\t\ticonCls : 'icon-sys-delete',\n");
      out.write("\t\thandler: function() {\n");
      out.write("\t\t\tvar record = grid.getSelectionModel().getSelected();\n");
      out.write("\t\t\tif(!record){\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tvar message = '';\n");
      out.write("\t\t\tif (record.get('F_TYPE') == ");
      out.print(FolderItem.TYPE_FOLDER);
      out.write(") {\n");
      out.write("\t\t\t\tmessage = \"删除文件夹【\" + record.get('F_NAME') + \"】，包括该文件夹下的所有子文件夹及文件，您确定吗？\";\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tmessage = \"删除文件【\" + record.get('F_NAME') + \"】，您确定吗？\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t//添加confirm\n");
      out.write("\t\t\tExt.Msg.confirm('危险操作提示', message, function(btn) {\n");
      out.write("\t\t\t\tif (btn == 'yes') {\n");
      out.write("\t\t\t\t\tAppFolderDirect.deleteFolderItem(record.get('ID'), record.get('F_TYPE'));\n");
      out.write("\t\t\t\t\tpanel.refresh();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t})\n");
      out.write("\t\n");
      out.write("\tvar buttons = [{xtype: 'tbtext', text: ''}, '->',fieldSearch, btnSearch, '-', AddFolderAction, '-', UploadFileButton, \"-\", btnEdit, btnDelete, '-', btnRefresh];\n");
      out.write("\n");
      out.write("\t//右键\n");
      out.write("\tvar contextmenus = [AddFolderAction, \"-\", btnEdit, btnDelete, btnRefresh];\n");
      out.write("\n");
      out.write("\tstore.on('load', function(store, records, option){\n");
      out.write("\t\tif (records.length > 0 && store.baseParams.folderId > 0) {\n");
      out.write("\t\t\tif (records[0].get('F_SHARETYPE') == ");
      out.print(FolderItem.TYPE_SHARE_WRITE);
      out.write(") {\n");
      out.write("\t\t\t\tAddFolderAction.enable();\n");
      out.write("\t\t\t\tUploadFileButton.enable();\n");
      out.write("\t\t\t\tbtnDelete.enable();\n");
      out.write("\t\t\t\tbtnEdit.enable();\n");
      out.write("\t\t\t\tstore.baseParams.sharetype = ");
      out.print(FolderItem.TYPE_SHARE_WRITE);
      out.write(";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar sm = new Ext.grid.RowSelectionModel({singleSelect:true});\n");
      out.write("\n");
      out.write("\t// 表格对象\n");
      out.write("\tvar grid = new Ext.grid.GridPanel({\n");
      out.write("\t\tborder : false,\n");
      out.write("\t\tstripeRows: true,\n");
      out.write("\t\tenableHdMenu : true,\n");
      out.write("\t\tlineBreak : true,\n");
      out.write("\t\tcellSelect : false,\n");
      out.write("        loadMask: {msg:'正在装载...'},\n");
      out.write("\t\tautoExpandColumn : 'F_NOTE',\n");
      out.write("\t\tsm : sm,\n");
      out.write("\t\tcolumns : columns,\n");
      out.write("\t\tstore : store,\n");
      out.write("\t\ttbar : buttons,\n");
      out.write("\t\tcontextMenu : new Ext.menu.Menu({items:contextmenus}),\n");
      out.write("\t\tenableDragDrop : false,\n");
      out.write("\t\tddGroup : 'grid2tree',\n");
      out.write("\t\tlisteners:{\n");
      out.write("\t\t\trowcontextmenu:function(grid, rowIndex, e){\n");
      out.write("        \t    grid.getSelectionModel().selectRow(rowIndex);\n");
      out.write("\t\t\t\tif(this.contextMenu.items.length > 0 && grid.store.baseParams.sharetype == ");
      out.print(FolderItem.TYPE_SHARE_WRITE);
      out.write("){\n");
      out.write("\t\t\t\t\te.preventDefault();\n");
      out.write("\t\t\t\t\tif (rowIndex == 0 && store.baseParams.folderId > 0) {\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\tthis.contextMenu.showAt(e.getXY());\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\trowdblclick:function(grid, index, e){\n");
      out.write("\t\t\t\tvar record = grid.store.getAt(index);\n");
      out.write("\t\t\t\tif (record.get('F_TYPE') == 0) {\n");
      out.write("\t\t\t\t\tvar sharetype = 0\n");
      out.write("\t\t\t\t\tif (record.get('ID') > 0) {\n");
      out.write("\t\t\t\t\t\tsharetype = record.get('F_SHARETYPE');\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\tpanel.refresh({folderId:record.get('ID'),sharetype:sharetype});\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\tlocation.href = 'engine/file/sysdownload.do?documentdbtype=blob&fieldname=F_FILE&documentkey=mkNetFolder.docNetFile'\n");
      out.write("\t\t\t\t\t\t\t + '&id=' + record.get(\"ID\") + '&filename=' + record.get(\"F_FILENAME\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t},\n");
      out.write("\t\tgetSelectedRecords : function(){\n");
      out.write("\t\t\treturn this.getSelectionModel().getSelections();\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\tfunction getSelectedRecords(){\n");
      out.write("\t\treturn grid.getSelectedRecords();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 视图刷新\n");
      out.write("\tpanel.refresh = function(params){\n");
      out.write("\t\tif(Ext.isDefined(params) && Ext.isDefined(params.folderId)){\n");
      out.write("\t\t\tstore.baseParams.folderId = params.folderId;\n");
      out.write("\t\t\tstore.baseParams.sharetype = params.sharetype;\n");
      out.write("\n");
      out.write("\t\t\tAppFolderDirect.getFolderName(params.folderId, function(result, e){\n");
      out.write("\t\t\t\tif(result && result.success) {\n");
      out.write("\t\t\t\t\tgrid.getTopToolbar().get(0).setText(result.folderName);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t        });\n");
      out.write("\t\t}\n");
      out.write("\t\tAddFolderAction.disable();\n");
      out.write("\t\tUploadFileButton.disable();\n");
      out.write("\t\tbtnDelete.disable();\n");
      out.write("\t\tbtnEdit.disable();\n");
      out.write("\t\t// 初始化参数\n");
      out.write("\t\tstore.reload();\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 输出附加脚本 begin\n");
      out.write("\n");
      out.write("\t// 输出附加脚本 end\n");
      out.write("\tpanel.add(grid);\n");
      out.write("\tpanel.doLayout();\n");
      out.write("\t// 初始化视图数据\n");
      out.write("\tpanel.refresh(panel.initParams);\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\n");
      out.write("    //为左边菜单添加文件夹移动事件\n");
      out.write("\tExt.getCmp('m-mkNetFolder').items.items[0].moduleTree.addListener('beforenodedrop', function(e) {\n");
      out.write("\t\tif(Ext.isArray(e.data.selections)) {\n");
      out.write("\t\t\tvar r;\n");
      out.write("            for(var i = 0; i < e.data.selections.length; i++) {\n");
      out.write("\t            r = e.data.selections[i];\n");
      out.write("\t            var targetId;\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tif (e.target.attributes.folderId != null) {\n");
      out.write("\t\t\t\t\ttargetId = e.target.attributes.folderId;\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t//拖入到个人文件柜的目录下\n");
      out.write("\t\t\t\t\tif (e.target.id  == Ext.getCmp('m-mkNetFolder').items.items[0].moduleTree.getRootNode().firstChild.id) {\n");
      out.write("\t\t\t\t\t\tif (r.get('F_TYPE') == ");
      out.print(FolderItem.TYPE_FILE);
      out.write(") {\n");
      out.write("\t\t\t\t\t\t\tExt.Msg.alert('信息提示', '文件移动，只能移动到自定义的文件夹下！');\n");
      out.write("\t\t\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\ttargetId = 0;\n");
      out.write("\t\t\t\t\t//拖入到其它根目录，直接返回\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\tExt.Msg.alert('信息提示', '文件和文件夹的移动，只能移动到个人文件柜下！');\n");
      out.write("\t\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t\tif (targetId == r.get('F_PARENTID')) {\n");
      out.write("\t\t\t\t\tExt.Msg.alert('信息提示', r.get('F_NAME') + '已经在' + e.target.text + '文件夹下！');\n");
      out.write("\t\t\t\t\treturn false; \n");
      out.write("\t\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t\tif (targetId == r.get('ID')) {\n");
      out.write("\t\t\t\t\tExt.Msg.alert('信息提示', r.get('F_NAME') + '不允许移动到' + e.target.text + '文件夹下！');\n");
      out.write("\t\t\t\t\treturn false; \n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tAppFolderDirect.moveFolderItem(r.get('ID'), targetId, function(result, event) {\n");
      out.write("\t\t\t\t\tif (result) {\n");
      out.write("\t\t\t\t\t\tif (result.success) {\n");
      out.write("\t\t\t\t\t\t\te.target.reload();\n");
      out.write("\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t//不允许移动到指定目录\n");
      out.write("\t\t\t\t\t\t\tExt.Msg.alert('信息提示', r.get('F_NAME') + '不允许移动到' + e.target.text + '文件夹下！');\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}, this);\n");
      out.write("            }\n");
      out.write(" \n");
      out.write("            return true;\n");
      out.write("        }\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\t//表单保存后刷新视图列表和菜单\n");
      out.write("\tpanel.refreshViewAndTree = function() {\n");
      out.write("\t\tpanel.refresh();\n");
      out.write("\t};\n");
      out.write("\n");
      out.write("\tpanel.refreshView = function() {\n");
      out.write("\t\tpanel.refresh();\n");
      out.write("\t};\n");
      out.write("\n");
      out.write("});\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
