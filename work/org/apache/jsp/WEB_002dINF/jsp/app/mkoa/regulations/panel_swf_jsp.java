/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2013-01-28 07:01:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.app.mkoa.regulations;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Map;
import com.mixky.engine.document.Panel;
import com.mixky.engine.document.Document;
import com.mixky.engine.common.DesignObjectLoader;
import com.mixky.engine.common.DesignObject;
import com.mixky.app.mkoa.regulations.RegulationManager;

public final class panel_swf_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String documentid = request.getParameter("documentid");
	String panelid = request.getParameter("panelid");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script lang='javascript'>\r\n");
      out.write("\tExt.onReady(function(){\r\n");
      out.write("\t\tvar panel = Ext.getCmp('");
      out.print(panelid);
      out.write("');\t\t\r\n");
      out.write("\r\n");
      out.write("\t\tvar fp = new FlexPaperViewer(\t\r\n");
      out.write("\t\t\t 'dependences/flexpage/1.4.2/FlexPaperViewer',\r\n");
      out.write("\t\t\t panel.body.id, \r\n");
      out.write("\t\t\t { \r\n");
      out.write("\t\t\t\tconfig : {\r\n");
      out.write("\t\t\t\t\tSwfFile : 'app/mkoa/regulations/");
      out.print(documentid);
      out.write(".swf',\r\n");
      out.write("\t\t\t\t\tScale : 1.5, \r\n");
      out.write("\t\t\t\t\tZoomTransition : 'easeOut',\r\n");
      out.write("\t\t\t\t\tZoomTime : 0.5,\r\n");
      out.write("\t\t\t\t\tZoomInterval : 0.2,\r\n");
      out.write("\t\t\t\t\tFitPageOnLoad : false,\r\n");
      out.write("\t\t\t\t\tFitWidthOnLoad : false,\r\n");
      out.write("\t\t\t\t\tPrintEnabled : false,\r\n");
      out.write("\t\t\t\t\tFullScreenAsMaxWindow : false,\r\n");
      out.write("\t\t\t\t\tProgressiveLoading : false,\r\n");
      out.write("\t\t\t\t\tMinZoomSize : 0.2,\r\n");
      out.write("\t\t\t\t\tMaxZoomSize : 5,\r\n");
      out.write("\t\t\t\t\tSearchMatchAll : false,\r\n");
      out.write("\t\t\t\t\tInitViewMode : 'Portrait',\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tViewModeToolsVisible : false,\r\n");
      out.write("\t\t\t\t\tZoomToolsVisible : true,\r\n");
      out.write("\t\t\t\t\tNavToolsVisible : true,\r\n");
      out.write("\t\t\t\t\tCursorToolsVisible : false,\r\n");
      out.write("\t\t\t\t\tSearchToolsVisible : false,\r\n");
      out.write("\t\t\t\t\tlocaleChain: 'en_US'\r\n");
      out.write("\t\t\t \t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t);\r\n");
      out.write("\r\n");
      out.write("\t\t// 输出附加脚本 end\r\n");
      out.write("\t\t//panel.add(fckPanel);\r\n");
      out.write("\t\tpanel.doLayout();\r\n");
      out.write("\t\t//form.doLayout();\r\n");
      out.write("\t\t// 初始化视图数据\r\n");
      out.write("\t\tpanel.refresh();\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
