/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2013-01-28 08:31:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.app.mkoa.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mixky.app.ApplicationParameters;

public final class user_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	String panelid = request.getParameter("panelid");

      out.write("\r\n");
      out.write("<script language='javascript'>\r\n");
      out.write("Ext.onReady(function(){\r\n");
      out.write("\tvar panelid = '");
      out.print(panelid);
      out.write("';\r\n");
      out.write("\tvar panel = Ext.getCmp(panelid);\r\n");
      out.write("\r\n");
      out.write("\t// 数据访问\r\n");
      out.write("\tvar store = new Ext.data.DirectStore({\r\n");
      out.write("\t\tpruneModifiedRecords : true,\r\n");
      out.write("\t\tdirectFn : AdminAppDirect.getUsers,\r\n");
      out.write("\t\tparamOrder:[],\r\n");
      out.write("\t\troot : 'results',\r\n");
      out.write("\t\ttotalProperty : 'totals',\r\n");
      out.write("\t\tidProperty : 'id',\r\n");
      out.write("\t\tsortInfo: {field:'f_order', direction: 'ASC'},\r\n");
      out.write("\t\tfields:['id', 'rowstate', 'f_order', 'f_type', 'f_state', 'f_name', 'f_caption', 'f_dept_name', 'f_dept_id', 'f_email', 'f_cellphone', 'f_note', 'f_sign', 'f_depts','f_roles']\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("    // 功能条\r\n");
      out.write("    var AddAction = new Ext.Action({\r\n");
      out.write("\t\ttext:'添加',\r\n");
      out.write("\t\ticonCls:'icon-sys-add',\r\n");
      out.write("\t\thandler:function(){\r\n");
      out.write("\t\t\tMixky.lib.getNewTableRecordId('t_mk_sys_user', function(newId){\r\n");
      out.write("\t\t\t\tvar record = new store.recordType({id : newId, rowstate : 'add'}, newId);\r\n");
      out.write("\t\t\t\tstore.insert(store.getCount(), record);\r\n");
      out.write("\t\t\t\trecord.set('f_order', store.getCount());\r\n");
      out.write("\t\t\t\trecord.set('f_name', 'user' + newId);\r\n");
      out.write("\t\t\t\trecord.set('f_caption', '新建用户');\r\n");
      out.write("\t\t\t\trecord.set('f_type', 1);\r\n");
      out.write("\t\t\t\trecord.set('f_state', 0);\r\n");
      out.write("\t\t\t\trecord.set('f_email', '');\r\n");
      out.write("\t\t\t\trecord.set('f_cellphone', '');\r\n");
      out.write("\t\t\t\trecord.set('f_note', '');\r\n");
      out.write("\t\t\t\trecord.set('f_sign', '');\r\n");
      out.write("\t\t\t\trecord.set('f_depts', {});\r\n");
      out.write("\t\t\t\trecord.set('f_roles', {});\r\n");
      out.write("\t\t\t\tgrid.getSelectionModel().selectLastRow();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("    var DelAction = new Ext.Action({\r\n");
      out.write("\t\ttext:'删除',\r\n");
      out.write("\t\ticonCls:'icon-sys-delete',\r\n");
      out.write("\t\thandler:function(){\r\n");
      out.write("\t\t\tvar sm = grid.getSelectionModel()\r\n");
      out.write("\t\t\tvar record = sm.getSelected();\r\n");
      out.write("\t\t\tif(record.get('id') == 1){\r\n");
      out.write("\t\t\t\tMixkyApp.showErrorMessage('系统用户，不允许删除。', '错误提示');\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(record){\r\n");
      out.write("\t\t\t\tvar index = store.indexOf(record);\r\n");
      out.write("\t\t\t\tif(record.get('rowstate') == 'add'){\r\n");
      out.write("\t\t\t\t\tstore.remove(record);\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\trecord.set('rowstate', 'del');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tfor(var i=index;i<store.getCount();i++){\r\n");
      out.write("\t\t\t\t\tvar record = store.getAt(i);\r\n");
      out.write("\t\t\t\t\tif(record.dirty){\r\n");
      out.write("\t\t\t\t\t\trecord.set('f_roder', i + 1);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\trecord.set('f_roder', i + 1);\r\n");
      out.write("\t\t\t\t\t\trecord.commit();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tsm.deselectRow(index);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("    var MoveUpAction = new Ext.Action({\r\n");
      out.write("\t\ttext : '上移',\r\n");
      out.write("\t\ticonCls : 'icon-sys-up',\r\n");
      out.write("\t\thandler : function(){\r\n");
      out.write("\t\t\tvar record = grid.getSelectionModel().getSelected();\r\n");
      out.write("\t\t\tif(!record){\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar index = grid.getStore().indexOf(record);\r\n");
      out.write("\t\t\tif(index == 0){\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar recordPre = store.getAt(index - 1);\r\n");
      out.write("\t\t\trecord.set('f_order', index);\r\n");
      out.write("\t\t\trecordPre.set('f_order', index + 1);\r\n");
      out.write("\t\t\tgrid.getStore().sort('f_order', 'ASC');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("    var MoveDownAction = new Ext.Action({\r\n");
      out.write("\t\ttext:'下移',\r\n");
      out.write("\t\ticonCls:'icon-sys-down',\r\n");
      out.write("\t\thandler : function(){\r\n");
      out.write("\t\t\tvar record = grid.getSelectionModel().getSelected();\r\n");
      out.write("\t\t\tif(!record){\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar index = grid.getStore().indexOf(record);\r\n");
      out.write("\t\t\tif(index == grid.getStore().getCount() - 1){\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar recordNext = store.getAt(index + 1);\r\n");
      out.write("\t\t\trecord.set('f_order', index + 2);\r\n");
      out.write("\t\t\trecordNext.set('f_order', index + 1);\r\n");
      out.write("\t\t\tgrid.getStore().sort('f_order', 'ASC');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("    var ResetPasswordAction = new Ext.Action({\r\n");
      out.write("\t\ttext:'重置密码',\r\n");
      out.write("\t\ticonCls:'icon-sys-resetpassword',\r\n");
      out.write("\t\thandler : function(){\r\n");
      out.write("\t\t\tvar record = grid.getSelectionModel().getSelected();\r\n");
      out.write("\t\t\tif(!record){\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tExt.MessageBox.confirm('操作提示', '重置【' + record.get('f_name') + '】用户登录密码为初始密码，您确定吗？', function(btn){\r\n");
      out.write("\t\t\t\tif(btn == 'yes'){\r\n");
      out.write("\t\t\t\t\tAdminAppDirect.resetUserPassword(record.get('id') , function(result, e){\r\n");
      out.write("\t\t\t\t\t\tif(result && result.success){\r\n");
      out.write("\t\t\t\t\t\t\tMixkyApp.showInfoMessage('用户【' + record.get('f_name') + '】重置密码成功。', '操作提示');\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tMixkyApp.showErrorMessage('用户【' + record.get('f_name') + '】重置密码失败。', '错误提示');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tvar btnDelSign = new Ext.Action({\r\n");
      out.write("\t\ttext : '删除签名',\r\n");
      out.write("\t\ticonCls : 'icon-sys-delete',\r\n");
      out.write("\t\thandler : function(){\r\n");
      out.write("\t\t\tvar record = grid.getSelectionModel().getSelected();\r\n");
      out.write("\t\t\tif(!record){\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\trecord.set('f_sign', '');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("    var uploadSignButton = new Mixky.plugins.UploadButton({\r\n");
      out.write("\t\ttext: '批量上传签名',\r\n");
      out.write("\t\ticonCls: 'icon-sys-upload',\r\n");
      out.write("\t\ttooltip: '签名图片文件名称应与\\'用户登录名\\'或\\'用户姓名\\'一致',\r\n");
      out.write("\t\tuploadConfig : {\r\n");
      out.write("\t\t\tupload_url : 'servlet/file.upload.to.folder',\r\n");
      out.write("\t\t\tfile_types_description : '图形文件',\r\n");
      out.write("\t\t\tfile_types : '*.gif;*.jpg;*.png',\r\n");
      out.write("\t\t\tpost_params : {\r\n");
      out.write("    \t\t\ttargetFolder: '");
      out.print(ApplicationParameters.instance().getHandSignFolder());
      out.write("'\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("    var synchroUserButton = new Ext.Action({\r\n");
      out.write("\t\ttext: '即时通信用户同步',\r\n");
      out.write("\t\ticonCls:'icon-sys-synchro',\r\n");
      out.write("\t\thandler : function(){\r\n");
      out.write("\t\t\tExt.MessageBox.confirm('操作提示', '同步用户会重新建立即时通信的组织结构，您确定吗？', function(btn){\r\n");
      out.write("\t\t\t\tif(btn == 'yes'){\r\n");
      out.write("\t\t\t\t\tMessagerAppDirect.InitMessagerUser(function(result, e){\r\n");
      out.write("\t\t\t\t\t\tif(result && result.success){\r\n");
      out.write("\t\t\t\t\t\t\tMixkyApp.showInfoMessage('用户同步完成。', '操作提示');\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tMixkyApp.showErrorMessage('用户同步失败。', '错误提示');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("    \r\n");
      out.write("\tvar btnSave = new Ext.Action({\r\n");
      out.write("\t\ttext : '保存',\r\n");
      out.write("\t\ticonCls : 'icon-sys-save',\r\n");
      out.write("\t\thandler : function(){\r\n");
      out.write("\t\t\tpanel.save();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tvar btnRefresh = new Ext.Action({\r\n");
      out.write("\t\ttext : '刷新',\r\n");
      out.write("\t\ticonCls : 'icon-sys-refresh',\r\n");
      out.write("\t\thandler : function(){\r\n");
      out.write("\t\t\tpanel.refresh();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("    var tools = [AddAction, '-', DelAction, '-', MoveUpAction, MoveDownAction,'-', ResetPasswordAction, '-', btnDelSign, '-', btnSave, '->',synchroUserButton, uploadSignButton, '-', btnRefresh];\r\n");
      out.write("    var menus = [AddAction, '-', DelAction, '-', MoveUpAction, MoveDownAction,'-', ResetPasswordAction, '-', btnDelSign, '-', btnSave, '-', btnRefresh];\r\n");
      out.write("\t// 表格对象\r\n");
      out.write("\tvar grid = new Ext.grid.GridPanel({\r\n");
      out.write("    \tregion : 'center',\r\n");
      out.write("\t\tborder : false,\r\n");
      out.write("\t\tautoExpandColumn:'f_note',\r\n");
      out.write("\t\tenableHdMenu:false,\r\n");
      out.write("\t\tenableColumnMove:false,\r\n");
      out.write("\t\tstore : store,\r\n");
      out.write("\t\tcolumns : [new Mixky.editor.RowNumberer(), {\r\n");
      out.write("\t\t\tid : 'id',\r\n");
      out.write("\t\t\tdataIndex : 'id',\r\n");
      out.write("\t\t\theader : 'ID',\r\n");
      out.write("\t\t\twidth : 70,\r\n");
      out.write("\t\t\trenderer:function(value, p, record) {\r\n");
      out.write("\t\t\t\treturn String.format(\"<div style='height:16px;padding-left:23px;background:transparent url(resources/images/icon/sys/user.gif) no-repeat'> {0}</div>\", value);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tid : 'f_name',\r\n");
      out.write("\t\t\tdataIndex : 'f_name',\r\n");
      out.write("\t\t\theader : '登录名',\r\n");
      out.write("\t\t\twidth : 120\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tid : 'f_caption',\r\n");
      out.write("\t\t\tdataIndex : 'f_caption',\r\n");
      out.write("\t\t\theader : '姓名',\r\n");
      out.write("\t\t\twidth : 100\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tid : 'f_dept_name',\r\n");
      out.write("\t\t\tdataIndex : 'f_dept_name',\r\n");
      out.write("\t\t\theader : '所属部门',\r\n");
      out.write("\t\t\twidth : 120\r\n");
      out.write("\t\t},{\r\n");
      out.write("\t\t\tid : 'f_sign',\r\n");
      out.write("\t\t\tdataIndex : 'f_sign',\r\n");
      out.write("\t\t\theader : '签名',\r\n");
      out.write("\t    \trenderer : function(bVal){\r\n");
      out.write("\t\t\t\tif(bVal && bVal != ''){\r\n");
      out.write("\t\t\t\t\treturn '有'\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\treturn '';\r\n");
      out.write("\t        },\r\n");
      out.write("\t\t\twidth : 40\r\n");
      out.write("\t\t},{\r\n");
      out.write("\t\t\tid : 'f_state',\r\n");
      out.write("\t\t\tdataIndex : 'f_state',\r\n");
      out.write("\t\t\theader : '状态',\r\n");
      out.write("\t    \trenderer : function(bVal){\r\n");
      out.write("\t\t\t\tswitch(bVal){\r\n");
      out.write("\t\t\t\tcase 0: return '正常';\r\n");
      out.write("\t\t\t\tcase 1: return '已离职';\r\n");
      out.write("\t\t\t\tdefalut : return bVal;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t        },\r\n");
      out.write("\t\t\twidth : 80\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tid : 'f_note',\r\n");
      out.write("\t\t\tdataIndex : 'f_note',\r\n");
      out.write("\t\t\theader : '说明',\r\n");
      out.write("\t\t\teditor : Mixky.lib.getEditorComponent('textbox')\r\n");
      out.write("\t\t}],\r\n");
      out.write("\t\tviewConfig:{\r\n");
      out.write("\t\t\tgetRowClass: function(record, index) {\r\n");
      out.write("\t\t\t\tif(record.dirty){\r\n");
      out.write("\t\t\t\t\treturn 'mixky-grid-row-changed';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tsm : new Ext.grid.RowSelectionModel({\r\n");
      out.write("\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t'beforerowselect' : function(sm, index, ke, record){\r\n");
      out.write("\t\t\t\t\tif(record.get('rowstate') == 'del'){\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}),\r\n");
      out.write("\t\tcontextMenu : new Ext.menu.Menu({items : menus}),\r\n");
      out.write("\t\tlisteners : {\r\n");
      out.write("\t\t\t'rowcontextmenu' : function(g, rowIndex, e){\r\n");
      out.write("\t\t\t\tg.getSelectionModel().selectRow(rowIndex);\r\n");
      out.write("\t\t\t\tg.contextMenu.showAt(e.getXY());\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tvar detail = new Ext.Panel({\r\n");
      out.write("    \tregion : 'east' ,\r\n");
      out.write("    \tdisabled : true,\r\n");
      out.write("\t\tautoLoad : {\r\n");
      out.write("\t\t\turl : 'page.do',\r\n");
      out.write("\t\t\tscripts:true,\r\n");
      out.write("\t\t\tparams:{url:'app/mkoa/admin/user.editor'},\r\n");
      out.write("\t\t\tborder:false\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\twidth : 350,\r\n");
      out.write("\t\tsplit : true,\r\n");
      out.write("\t\tborder : false,\r\n");
      out.write("\t\tlayout : 'fit',\r\n");
      out.write("\t\t// 开始编辑记录\r\n");
      out.write("\t\tstartEditRecord : Ext.emptyFn,\r\n");
      out.write("\t\t// 结束编辑记录\r\n");
      out.write("\t\tstopEditRecord : Ext.emptyFn\r\n");
      out.write("\t});\r\n");
      out.write("\tExt.apply(detail.autoLoad.params, {panelid : detail.getId()});\r\n");
      out.write("\r\n");
      out.write("\tgrid.getSelectionModel().on(\"rowselect\", function(sm, index, record){\r\n");
      out.write("\t\tdetail.startEditRecord(record);\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tgrid.getSelectionModel().on(\"rowdeselect\", function(sm, index, record){\r\n");
      out.write("\t\tdetail.stopEditRecord(record, true);\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t// 刷新\r\n");
      out.write("\tpanel.refresh = function(){\r\n");
      out.write("\t\tstore.reload();\r\n");
      out.write("\t}\r\n");
      out.write("\t// 保存属性修改\r\n");
      out.write("\tpanel.save = function(){\r\n");
      out.write("\t\tdetail.stopEditRecord();\r\n");
      out.write("\t\tvar modifieds = store.getModifiedRecords();\r\n");
      out.write("\t\tif(modifieds.length > 0){\r\n");
      out.write("\t\t\tvar record = modifieds[0];\r\n");
      out.write("\t\t\tvar user = record.getChanges();\r\n");
      out.write("\t\t\tuser.id = record.get('id');\r\n");
      out.write("\t\t\tuser.rowstate = record.get('rowstate');\r\n");
      out.write("\t\t\tAdminAppDirect.saveUser(user, function(result, e){\r\n");
      out.write("\t\t\t\tif(result && result.success){\r\n");
      out.write("\t\t\t\t\tif(record.get('rowstate') == 'del'){\r\n");
      out.write("\t\t\t\t\t\tstore.remove(record);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\trecord.set('rowstate', '');\r\n");
      out.write("\t\t\t\t\t\trecord.commit();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tpanel.save();\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tMixkyApp.showErrorMessage('保存数据出现错误！', '错误提示');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tvar ui = new Ext.Panel({\r\n");
      out.write("\t\tlayout:'border',\r\n");
      out.write("\t\tborder : false,\r\n");
      out.write("\t\tdefaults : {border:false},\r\n");
      out.write("\t\ttbar : tools,\r\n");
      out.write("\t\titems:[grid, detail]\r\n");
      out.write("\t});\r\n");
      out.write("\tpanel.add(ui);\r\n");
      out.write("\tpanel.doLayout();\r\n");
      out.write("\tpanel.refresh();\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
