/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2013-01-28 09:39:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.designtool.workflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class node_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String id = request.getParameter("id");

      out.write("\r\n");
      out.write("<script language='javascript'>\r\n");
      out.write("Ext.onReady(function(){\r\n");
      out.write("\tvar id = '");
      out.print(id);
      out.write("';\r\n");
      out.write("\tvar mclass = 'node';\r\n");
      out.write("\t\r\n");
      out.write("\tvar panel = Ext.getCmp(id);\r\n");
      out.write("\r\n");
      out.write("\t// 获得对象的属性列表\r\n");
      out.write("\tvar module = Mixky.designtool.Class.getModule(mclass);\r\n");
      out.write("\tvar mstore = [];\r\n");
      out.write("\tif(module.properties){\r\n");
      out.write("\t\tfor(var i=0;i<module.properties.length;i++){\r\n");
      out.write("\t\t\tvar p = module.properties[i];\r\n");
      out.write("\t\t\tmstore.push([p.name, '', p.text, '1-extend-attribute', p.xeditor, p.xconfig, p.note]);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfor(var i=0;i<Mixky.designtool.Class.defaultProperties.length;i++){\r\n");
      out.write("\t\tvar p = Mixky.designtool.Class.defaultProperties[i];\r\n");
      out.write("\t\tmstore.push([p.name, '', p.text, '0-public-attribute', p.xeditor, p.xconfig, p.note]);\r\n");
      out.write("\t}\r\n");
      out.write("\t// 属性编辑窗口\r\n");
      out.write("\tvar pgrid = new Ext.mixky.PropertyGrid({\r\n");
      out.write("\t\tregion : 'center',\r\n");
      out.write("\t\txtype : 'mixkypropertygrid',\r\n");
      out.write("\t\tcaptionWidth : 70,\r\n");
      out.write("\t\tproperties : mstore,\r\n");
      out.write("\t\tshowPropertyNote : function(record){\r\n");
      out.write("\t\t\tvar readonly = '';\r\n");
      out.write("\t\t\tif(record.get(\"editor\") == 'readonly' || record.get(\"editor\") == 'none' ){\r\n");
      out.write("\t\t\t\treadonly = '，<font color=red>只读</font>';\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tnpanel.body.update('<B>'+record.get(\"caption\")+' ('+record.get(\"name\")+')</B>' + readonly + '<BR><BR>'+record.get(\"note\"));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t// 信息提示窗口\r\n");
      out.write("\tvar npanel = new Ext.Panel({\r\n");
      out.write("\t\tregion : 'south',\r\n");
      out.write("\t\tsplit : true,\r\n");
      out.write("\t\tcollapsible : true,\r\n");
      out.write("        collapseMode:'mini',\r\n");
      out.write("\t\theight : 100,\r\n");
      out.write("\t\tbodyStyle:'background-color:lightyellow;padding:8px;font-size:12px'\r\n");
      out.write("\t});\r\n");
      out.write("\tvar ui = {\r\n");
      out.write("\t\tlayout : 'border',\r\n");
      out.write("\t\tborder : false,\r\n");
      out.write("\t\tdefaults : {border:false},\r\n");
      out.write("\t\titems : [pgrid, npanel]\r\n");
      out.write("\t};\r\n");
      out.write("\t// 保存属性修改\r\n");
      out.write("\tpanel.save = function(){\r\n");
      out.write("\t\tvar store = pgrid.getStore();\r\n");
      out.write("\t\tvar modifieds = store.getModifiedRecords();\r\n");
      out.write("\t\tif(modifieds.length > 0){\r\n");
      out.write("\t\t\tvar commit = {};\r\n");
      out.write("\t\t\tfor(var i=0;i<modifieds.length;i++){\r\n");
      out.write("\t\t\t\tvar record = modifieds[i];\r\n");
      out.write("\t\t\t\tcommit[record.get(\"name\")] = record.get(\"value\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tDesignToolDirect.saveObject(panel.key, commit, function(result, e){\r\n");
      out.write("\t\t\t\tpgrid.propStore.loadObjectData(result.object);\r\n");
      out.write("\t\t\t\tpgrid.getStore().commitChanges();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\t// 重新装载属性数据\r\n");
      out.write("\tpanel.loadPropertiesData = function(key){\r\n");
      out.write("\t\tif(key){\r\n");
      out.write("\t\t\tpanel.key = key;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(!panel.key){\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tDesignToolDirect.loadObject(panel.key, function(result, e){\r\n");
      out.write("\t\t\tif(result.success){\r\n");
      out.write("\t\t\t\tpgrid.propStore.loadObjectData(result.object);\r\n");
      out.write("\t\t\t\tpgrid.key = result.object.key;\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\tpanel.add(ui);\r\n");
      out.write("\tpanel.doLayout();\r\n");
      out.write("\tpanel.loadPropertiesData();\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
