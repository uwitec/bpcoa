/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2013-01-27 06:49:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.app.mkoa.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mixky.app.mkoa.admin.ConfigrationManager;

public final class configration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	String panelid = request.getParameter("panelid");

      out.write("\r\n");
      out.write("<script language='javascript'>\r\n");
      out.write("Ext.onReady(function(){\r\n");
      out.write("\tvar panel = Ext.getCmp('");
      out.print(panelid);
      out.write("');\r\n");
      out.write("\t\r\n");
      out.write("\tvar displayField = new Ext.grid.GridEditor(new Ext.form.TextField({readOnly:true, selectOnFocus:true}));\r\n");
      out.write("\tvar textareaField = new Ext.grid.GridEditor(new Ext.form.TextArea({readOnly:true, selectOnFocus:true}));\r\n");
      out.write("\t\r\n");
      out.write("\tvar grid = new Ext.grid.PropertyGrid({\r\n");
      out.write("\t\tborder : false,\r\n");
      out.write("\t\ttbar : ['->', {\r\n");
      out.write("\t\t\ttext : '产品注册',\r\n");
      out.write("\t\t\ticonCls : 'icon-sys-logo',\r\n");
      out.write("\t\t\thandler : function(){\r\n");
      out.write("\t\t\t\tMixkyApp.desktop.openDourlWithWindow(\r\n");
      out.write("\t\t\t\t\t\t'win-register', \r\n");
      out.write("\t\t\t\t\t\t'app/mkoa/admin/product.register', \r\n");
      out.write("\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\twidth : 350,\r\n");
      out.write("\t\t\t\t\t\t\theight : 300,\r\n");
      out.write("\t\t\t\t\t\t\tminimizable : false,\r\n");
      out.write("\t\t\t\t\t\t\tmaximizable : false,\r\n");
      out.write("\t\t\t\t\t\t\tresizable : false,\r\n");
      out.write("\t\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\t\ttitle : '产品注册',\r\n");
      out.write("\t\t\t\t\t\t\tdefaults : {padding : 5},\r\n");
      out.write("\t\t\t\t\t\t\ticonCls : 'icon-sys-logo'\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}, '-',{\r\n");
      out.write("\t\t\ttext : '保存',\r\n");
      out.write("\t\t\ticonCls : 'icon-sys-save',\r\n");
      out.write("\t\t\thandler : function(){\r\n");
      out.write("\t\t\t\tpanel.submit();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}, '-',{\r\n");
      out.write("\t\t\ttext : '刷新',\r\n");
      out.write("\t\t\ticonCls : 'icon-sys-refresh',\r\n");
      out.write("\t\t\thandler : function(){\r\n");
      out.write("\t\t\t\tpanel.refresh();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}],\r\n");
      out.write("\t\tsource: ");
      out.print(ConfigrationManager.instance().getConfigration());
      out.write(",\r\n");
      out.write("\t\tcustomRenderers : {\r\n");
      out.write("\t\t\t\"s04ProductLicenses\" : function(v){\r\n");
      out.write("\t\t\t\treturn v + ' 用户许可';\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t\"s05ServiceLimit\" : function(v){\r\n");
      out.write("\t\t\t\treturn '截止于 ' + v;\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t\"s06SmsMessages\" : function(v){\r\n");
      out.write("\t\t\t\treturn '剩余 ' + v + ' 条短信';\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tcustomEditors : {\r\n");
      out.write("\t\t\t\"s01ProductName\" : displayField,\r\n");
      out.write("\t\t\t\"s02ProductVersion\" : displayField,\r\n");
      out.write("\t\t\t\"s03ProductSN\" : displayField,\r\n");
      out.write("\t\t\t\"s04ProductKey\" : textareaField,\r\n");
      out.write("\t\t\t\"s05ProductLicenses\" : displayField,\r\n");
      out.write("\t\t\t\"s06ServiceLimit\" : displayField,\r\n");
      out.write("\t\t\t\"s07SmsMessages\" : displayField,\r\n");
      out.write("\t\t\t\"s10ApplicationPath\" : displayField\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tpropertyNames : {\r\n");
      out.write("\t        \"s01ProductName\": '<b>产品名称</b> （<FONT color=red>只读</FONT>）',\r\n");
      out.write("        \t\"s02ProductVersion\" : '<b>产品版本</b> （<FONT color=red>只读</FONT>）',\r\n");
      out.write("\t        \"s03ProductSN\": '<b>产品序列号</b> （<FONT color=red>只读</FONT>）',\r\n");
      out.write("\t        \"s04ProductKey\": '<b>产品注册码</b> （<FONT color=red>只读</FONT>）',\r\n");
      out.write("\t\t\t\"s05ProductLicenses\" : '<b>许可用户数</b> （<FONT color=red>只读</FONT>）',\r\n");
      out.write("\t\t\t\"s06ServiceLimit\" : '<b>服务期限</b> （<FONT color=red>只读</FONT>）',\r\n");
      out.write("\t\t\t\"s07SmsMessages\" : '<b>剩余短信量</b> （<FONT color=red>只读</FONT>）',\r\n");
      out.write("\t        \"s10ApplicationPath\": \"<b>系统运行路径</b> （<FONT color=red>只读</FONT>）\",\r\n");
      out.write("\t        \"s11ApplicationTitle\" : '<font color=blue>应用标题</font>',\r\n");
      out.write("\t        \"s12ApplicationUrl\" : '<font color=blue>应用访问路径</font>'\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tgrid.on('propertychange', function(source, id, v, oldValue){\r\n");
      out.write("\t\tvar index = grid.getStore().find('name', id);\r\n");
      out.write("\t\tif(index >=0){\r\n");
      out.write("\t\t\tgrid.getStore().getAt(index).markDirty();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\tgrid.getColumnModel().setColumnWidth(0, 20);\r\n");
      out.write("\r\n");
      out.write("\tpanel.submit = function(){\r\n");
      out.write("\t\tvar isDirty = false\r\n");
      out.write("\t\tvar values = {};\r\n");
      out.write("\t\tfor(var i=0;i<grid.getStore().getCount();i++){\r\n");
      out.write("\t\t\tvar record = grid.getStore().getAt(i);\r\n");
      out.write("\t\t\tif(record.dirty){\r\n");
      out.write("\t\t\t\tvalues[record.get('name')] = record.get('value');\r\n");
      out.write("\t\t\t\tisDirty = true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(isDirty){\r\n");
      out.write("\t\t\tAdminAppDirect.setConfigration(values, function(result, e){\r\n");
      out.write("\t\t\t\tif(result && result.success){\r\n");
      out.write("\t\t\t\t\tpanel.refresh();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tpanel.refresh = function(){\r\n");
      out.write("\t\tAdminAppDirect.getConfigration(function(result, e){\r\n");
      out.write("\t\t\tif(result && result.success){\r\n");
      out.write("\t\t\t\tgrid.setSource(result.configration);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tMixkyApp.showErrorMessage('保存数据出现错误！', '错误提示');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\tpanel.add(grid);\r\n");
      out.write("\tpanel.doLayout();\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
