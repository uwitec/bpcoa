/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2013-01-28 07:41:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.app.mkoa.worklog;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import com.mixky.toolkit.DateUtil;
import com.mixky.app.certification.MixkyUserCertification;
import com.mixky.engine.organization.User;
import com.mixky.app.mkoa.worklog.WorklogManager;

public final class worklog_portlet_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	// 读取参数
	String key = request.getParameter("key");
	String panelid = "portlet-" + key;
	String date = DateUtil.format(new Date(System.currentTimeMillis()), DateUtil.FORMAT_DATE);
	User user = MixkyUserCertification.instance().getUserInfo(request);

      out.write("\r\n");
      out.write("<script language='javascript'>\r\n");
      out.write("Ext.onReady(function(){\r\n");
      out.write("\r\n");
      out.write("\tvar panel = Ext.getCmp('");
      out.print(panelid);
      out.write("');\r\n");
      out.write("\r\n");
      out.write("\t// 数据访问\r\n");
      out.write("\tvar store = new Ext.data.DirectStore({\r\n");
      out.write("\t\tdirectFn : WorklogAppDirect.getWeekWorklogs,\r\n");
      out.write("\t\tparamOrder : ['userid', 'date'],\r\n");
      out.write("\t\tbaseParams : {userid : ");
      out.print(user.getId());
      out.write(", date : '");
      out.print(date);
      out.write("'},\r\n");
      out.write("\t\tremoteSort : true,\r\n");
      out.write("\t\troot : 'results',\r\n");
      out.write("\t\ttotalProperty : 'totals',\r\n");
      out.write("\t\tidProperty : 'F_DAY',\r\n");
      out.write("\t\tfields : ['F_DAY', 'F_DAYSTR', 'F_WORKLOGS']\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t// 选择人员\r\n");
      out.write("\tvar comboUser = new Ext.form.ComboBox({\r\n");
      out.write("\t\ttypeAhead: true,\r\n");
      out.write("\t\ttriggerAction: 'all',\r\n");
      out.write("\t\tmode: 'local',\r\n");
      out.write("\t\teditable : false,\r\n");
      out.write("\t\twidth : 80,\r\n");
      out.write("\t\tstore : new Ext.data.ArrayStore({\r\n");
      out.write("\t\t\tid: 0,\r\n");
      out.write("\t\t\tfields: ['id', 'name'],\r\n");
      out.write("\t\t\tdata:");
      out.print(WorklogManager.instance().getUnderlingUsers(user));
      out.write("\r\n");
      out.write("\t\t}),\r\n");
      out.write("\t\tvalueField: 'id',\r\n");
      out.write("\t\tdisplayField: 'name',\r\n");
      out.write("\t\tvalue : ");
      out.print(user.getId());
      out.write(",\r\n");
      out.write("\t\tlisteners : {\r\n");
      out.write("\t\t\t'select' : function(){\r\n");
      out.write("\t\t\t\tpanel.refresh();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("\t// 选择周\r\n");
      out.write("\tvar dateSelect = new Ext.form.DateField({\r\n");
      out.write("\t\tvalue:'");
      out.print(date);
      out.write("', \r\n");
      out.write("\t\teditable : false, \r\n");
      out.write("\t\twidth : 90,\r\n");
      out.write("\t\tformat : 'Y-m-d',\r\n");
      out.write("\t\tlisteners : {\r\n");
      out.write("\t\t\t'select' : function(){\r\n");
      out.write("\t\t\t\tpanel.refresh();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t// 上周\r\n");
      out.write("\tvar btnPreWeek = new Ext.Action({\r\n");
      out.write("\t\ticonCls : 'icon-sys-btnback',\r\n");
      out.write("\t\thandler : function(){\r\n");
      out.write("\t\t\t//var date = new Date(store.baseParams.date);\r\n");
      out.write("\t\t\tvar date = Date.parseDate(store.baseParams.date, 'Y-m-d');\r\n");
      out.write("\t\t\tdateSelect.setValue(date.add(Date.DAY, -7).format('Y-m-d'));\r\n");
      out.write("\t\t\tpanel.refresh();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t// 下周\r\n");
      out.write("\tvar btnNextWeek = new Ext.Action({\r\n");
      out.write("\t\ticonCls : 'icon-sys-btnnext',\r\n");
      out.write("\t\thandler : function(){\r\n");
      out.write("\t\t\t//var date = new Date(store.baseParams.date);\r\n");
      out.write("\t\t\tvar date = Date.parseDate(store.baseParams.date, 'Y-m-d');\r\n");
      out.write("\t\t\tdateSelect.setValue(date.add(Date.DAY, 7).format('Y-m-d'));\r\n");
      out.write("\t\t\tpanel.refresh();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\tvar grid = new Ext.grid.GridPanel({\r\n");
      out.write("\t\tborder : false,\r\n");
      out.write("\t\tstripeRows: false,\r\n");
      out.write("\t\thideHeaders : true,\r\n");
      out.write("\t\tlineBreak : false,\r\n");
      out.write("\t\tautoExpandColumn : 'F_WORKLOGS',\r\n");
      out.write("\t\ttbar : [btnPreWeek, dateSelect, btnNextWeek, '-', comboUser],\r\n");
      out.write("\t\tstore : store,\r\n");
      out.write("\t\tcontextMenu : new Ext.menu.Menu({\r\n");
      out.write("\t\t\titems:[{\r\n");
      out.write("\t\t\t\ttext : '添加日志',\r\n");
      out.write("\t\t\t\ticonCls : 'icon-sys-add',\r\n");
      out.write("\t\t\t\thandler : function(){\r\n");
      out.write("\t\t\t\t\tvar record = grid.getSelectionModel().getSelected();\r\n");
      out.write("\t\t\t\t\tif(!record){\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tvar userid = comboUser.getValue();\r\n");
      out.write("\t\t\t\t\tvar username = comboUser.getRawValue();\r\n");
      out.write("\t\t\t\t\tif(userid == ");
      out.print(user.getId());
      out.write("){\r\n");
      out.write("\t\t\t\t\t\tMixkyApp.desktop.openDocument('mkWorklog.docWorklog',undefined,{F_START_TIME : record.get('F_DAY') + ' 09:00:00', F_END_TIME : record.get('F_DAY') + ' 18:00:00'}, {openerId : panel.getId()});\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tMixkyApp.desktop.openDocument('mkWorklog.docWorklog',undefined,{F_STATE:'任务', F_USER : username, F_USER_ID : userid, F_START_TIME : record.get('F_DAY') + ' 09:00:00', F_END_TIME : record.get('F_DAY') + ' 18:00:00'}, {openerId : panel.getId()});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, '-', {\r\n");
      out.write("\t\t\t\ttext : '刷新',\r\n");
      out.write("\t\t\t\ticonCls : 'icon-sys-refresh',\r\n");
      out.write("\t\t\t\thandler : function(){\r\n");
      out.write("\t\t\t\t\tpanel.refresh();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}]\r\n");
      out.write("\t\t}),\r\n");
      out.write("\t\tlisteners : {\r\n");
      out.write("\t\t\t'rowcontextmenu' : function(g, rowIndex, e){\r\n");
      out.write("\t\t\t\tg.getSelectionModel().selectRow(rowIndex);\r\n");
      out.write("\t\t\t\tg.contextMenu.showAt(e.getXY());\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tcolumns : [{\r\n");
      out.write("\t\t\tid : 'F_DAY',\r\n");
      out.write("\t\t\tdataIndex : 'F_DAY',\r\n");
      out.write("\t\t\talign : 'center',\r\n");
      out.write("\t\t\twidth : 80,\r\n");
      out.write("\t\t\trenderer : function(value, metaData, record, rowIndex, colIndex, store){\r\n");
      out.write("\t\t\t\treturn '<B>' + record.get(\"F_DAYSTR\") + '</B><BR>' + record.get(\"F_DAY\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tid : 'F_WORKLOGS',\r\n");
      out.write("\t\t\tdataIndex : 'F_WORKLOGS',\r\n");
      out.write("\t\t\trenderer : function(value, metaData, record, rowIndex, colIndex, store){\r\n");
      out.write("\t\t\t\tvar output = '';\r\n");
      out.write("\t\t\t\tfor(var i=0;i<value.length;i++){\r\n");
      out.write("\t\t\t\t\tif(output != ''){\r\n");
      out.write("\t\t\t\t\t\toutput = output + \"<br>\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\toutput = output + String.format('<a href=# onclick=\"Mixky.app.common.openFavorite(\\'mkWorklog.docWorklog\\', {0})\">{1} {2}</a>', value[i].id, value[i].time, value[i].title);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\treturn output;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}]\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tpanel.refresh = function(){\r\n");
      out.write("\t\tstore.baseParams.userid = comboUser.getValue();\r\n");
      out.write("\t\tstore.baseParams.date = dateSelect.getRawValue();\r\n");
      out.write("\t\tstore.reload();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tpanel.add(grid);\r\n");
      out.write("\tpanel.doLayout();\r\n");
      out.write("\tpanel.refresh();\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
