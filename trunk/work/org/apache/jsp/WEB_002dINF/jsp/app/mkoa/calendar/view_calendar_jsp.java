/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2013-01-24 07:46:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.app.mkoa.calendar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.mixky.engine.common.Action;
import com.google.gson.JsonObject;
import com.mixky.engine.view.ViewManager;
import com.mixky.engine.view.View;
import com.mixky.engine.view.Column;
import com.mixky.engine.store.TableForm;
import com.mixky.engine.authority.AuthorityManager;
import com.mixky.engine.organization.User;
import com.mixky.engine.module.DocumentType;
import com.mixky.engine.common.DesignObjectLoader;

public final class view_calendar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String panelid = request.getParameter("panelid");
	View view = (View)request.getAttribute("view");
	User user = (User)request.getAttribute("user");
	
	String key = "calendar";
	// List<Column> columns = view.getF_columns();
	// List<Action> actions = AuthorityManager.instance().getDesignObjectsByUser(view.getF_buttons(), user);
	// JsonObject cfg = view.getF_config();
	// TableForm tableform = DesignObjectLoader.instance().loadDesignObject(cfg.get("editorform").getAsString());

      out.write("\r\n");
      out.write("<script language='javascript'>\r\n");
      out.write("\r\n");
      out.write("Ext.ns(\"Mixky.calendar\");\r\n");
      out.write("\r\n");
      out.write("Ext.onReady(function(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar panel = Ext.getCmp('");
      out.print(panelid);
      out.write("');\r\n");
      out.write("\tvar win = panel.findParentByType('window');\r\n");
      out.write("    \r\n");
      out.write("\tvar userId = ");
      out.print(user.getId());
      out.write(";\r\n");
      out.write("\r\n");
      out.write("    var count = 0;\r\n");
      out.write("    Mixky.app.common.LoadJsFile('mixkyjs-calendar-extend', 'app/mkoa/calendar/calendar.extend.js');\r\n");
      out.write("    var fn = function(){\r\n");
      out.write("        // 判断js是否加载完毕\r\n");
      out.write("        if(!Mixky.calendar.Language && count++ < 100){\r\n");
      out.write("            fn.defer(50);\r\n");
      out.write("        }else{\r\n");
      out.write("            var ds = new Ext.ux.calendar.DataSource({key:'");
      out.print(key);
      out.write("'});\r\n");
      out.write("            ds.initialLoad(userId, function(backObj){\r\n");
      out.write("                var cs = backObj.cs;\r\n");
      out.write("                ds.initialObj = backObj;\r\n");
      out.write("                var mp = new Ext.ux.calendar.MainPanel({\r\n");
      out.write("                    datasource:ds,\r\n");
      out.write("                    calendarSetting:cs,\r\n");
      out.write("                    lang : Mixky.calendar.Language\r\n");
      out.write("                });\r\n");
      out.write("        \t\tpanel.add(mp);\r\n");
      out.write("        \t\tpanel.doLayout();\r\n");
      out.write("            }, Mixky.calendar.Language);\r\n");
      out.write("        }\r\n");
      out.write("    };        \r\n");
      out.write("    fn();\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
