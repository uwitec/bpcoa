/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2013-01-24 07:47:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.app.mkoa.mail;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mixky.engine.organization.User;
import com.mixky.system.ContextHolder;
import java.util.List;
import com.mixky.app.mkoa.mail.MailTag;
import com.mixky.app.mkoa.mail.MailTagManager;

public final class mail_show_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

	String id = request.getParameter("id");
	String panelid = request.getParameter("panelid");
	
	User user = ContextHolder.instance().getUserCertification().getUserInfo(request);
	List<MailTag> tags = MailTagManager.instance().getUserPrivateTags(user);
	List<MailTag> mTags = MailTagManager.instance().getMailTags(Long.parseLong(id), user.getId());

      out.write("\n");
      out.write("\n");
      out.write("<script language='javascript'>\n");
      out.write("Ext.onReady(function(){\n");
      out.write("\n");
      out.write("\tvar panel = Ext.getCmp('");
      out.print(panelid);
      out.write("');\n");
      out.write("\n");
      out.write("\tvar btnReply = new Ext.Action({\n");
      out.write("\t\ttext : '回复',\n");
      out.write("\t\ticonCls : 'icon-app-mkoa-reply',\n");
      out.write("\t\thandler : function(){\n");
      out.write("\t\t\tpanel.oprMail(");
      out.print(id);
      out.write(", 'reply');\n");
      out.write("\t\t\tvar tabpanel = panel.findParentByType('tabpanel');\n");
      out.write("\t\t\ttabpanel.remove(panel);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar btnReplyAll = new Ext.Action({\n");
      out.write("\t\ttext : '回复全部',\n");
      out.write("\t\ticonCls : 'icon-app-mkoa-replyall',\n");
      out.write("\t\thandler : function(){\n");
      out.write("\t\t\tpanel.oprMail(");
      out.print(id);
      out.write(", 'replyall');\n");
      out.write("\t\t\tvar tabpanel = panel.findParentByType('tabpanel');\n");
      out.write("\t\t\ttabpanel.remove(panel);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar btnFw = new Ext.Action({\n");
      out.write("\t\ttext : '按正文转发',\n");
      out.write("\t\ticonCls : 'icon-app-mkoa-forward',\n");
      out.write("\t\thandler : function(){\n");
      out.write("\t\t\tpanel.oprMail(");
      out.print(id);
      out.write(", 'fw');\n");
      out.write("\t\t\tvar tabpanel = panel.findParentByType('tabpanel');\n");
      out.write("\t\t\ttabpanel.remove(panel);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar btnFwAtt = new Ext.Action({\n");
      out.write("\t\ttext : '转发',\n");
      out.write("\t\ticonCls : 'icon-app-mkoa-forwardatt',\n");
      out.write("\t\thandler : function(){\n");
      out.write("\t\t\tpanel.oprMail(");
      out.print(id);
      out.write(", 'fwatt');\n");
      out.write("\t\t\tvar tabpanel = panel.findParentByType('tabpanel');\n");
      out.write("\t\t\ttabpanel.remove(panel);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar btnViewHead = new Ext.Action({\n");
      out.write("\t\ttext : '查看邮件头',\n");
      out.write("\t\ticonCls : 'icon-sys-query',\n");
      out.write("\t\thandler : function(){\n");
      out.write("\t\t\tExt.MessageBox.alert('邮件头信息', Ext.get('");
      out.print(panelid);
      out.write("-maildetail').getValue());\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar btnDownload = new Ext.Action({\n");
      out.write("\t\ttext : '原信下载',\n");
      out.write("\t\ticonCls : 'icon-app-mkoa-downloadmail',\n");
      out.write("\t\thandler : function(){\n");
      out.write("\t\t\tvar filename = Ext.get('");
      out.print(panelid);
      out.write("-emlname').getValue();\n");
      out.write("\t\t\tvar filelocation = Ext.get('");
      out.print(panelid);
      out.write("-emllocation').getValue();\n");
      out.write("\t\t\tlocation.href='mkoa/mail/mailfile.download.do?filename=' + filename + \"&filelocation=\" + filelocation;\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar tagMenu = new Ext.menu.Menu({        \n");
      out.write("        items: [\n");

	for (int i = 0; i < tags.size(); i++) {
		boolean checked = false;
		for (int j = 0; j < mTags.size(); j++) {
			if (tags.get(i).getId() == mTags.get(j).getId()) {
				checked = true;
				break;
			}
		}
		
		if (i == 0) {

      out.write("\n");
      out.write("\t\t\t{\n");

		}

      out.write("\n");
      out.write("        \ttext: '");
      out.print(tags.get(i).getF_name());
      out.write("',\n");
      out.write("        \tvalue: ");
      out.print(tags.get(i).getId());
      out.write(",\n");
      out.write("        \tchecked: ");
      out.print(checked);
      out.write(",\n");
      out.write("        \tcheckHandler: function (item, checked){\n");
      out.write("        \t\tAppMailDirect.tagMail(");
      out.print(id);
      out.write(", item.value, checked, function(result, event) {\n");
      out.write("    \t\t\t\tif (result.success) {\n");
      out.write("        \t\t\t\tvar info = '已将邮件打上标签：' + item.text;\n");
      out.write("        \t\t\t\tif (!checked) {\n");
      out.write("        \t\t\t\t\tinfo = '已邮件从标签：' + item.text + '中移出';\n");
      out.write("        \t\t\t\t}\n");
      out.write("        \t\t\t\tMixkyApp.showInfoMessage(info, '信息提示');\n");
      out.write("    \t\t\t\t} else {\n");
      out.write("    \t\t\t\t\tMixkyApp.showInfoMessage('操作失败', '信息提示');\n");
      out.write("    \t\t\t\t}\n");
      out.write("    \t\t\t});\n");
      out.write("            }\n");
      out.write("\n");

		if (i == tags.size() - 1) {

      out.write("\n");
      out.write("\t\t}\n");

		} else {

      out.write("\n");
      out.write("\t\t}, { \n");

		}
	}

      out.write("\n");
      out.write("      \t]\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar moveMenu = new Ext.menu.Menu({        \n");
      out.write("        items: [\n");

	for (int i = 0; i < tags.size(); i++) {
		if (i == 0) {

      out.write("\n");
      out.write("\t\t\t{\n");

		}

      out.write("\n");
      out.write("        \ttext: '");
      out.print(tags.get(i).getF_name());
      out.write("',\n");
      out.write("        \tvalue: ");
      out.print(tags.get(i).getId());
      out.write(",\n");
      out.write("        \thandler: function (item){\n");
      out.write("        \t\tAppMailDirect.moveMail(");
      out.print(id);
      out.write(", item.value, function(result, event) {\n");
      out.write("    \t\t\t\tif (result.success) {\n");
      out.write("        \t\t\t\tMixkyApp.showInfoMessage('已经邮件移动到标签：' + item.text + '中！' , '信息提示');\n");
      out.write("    \t\t\t\t} else {\n");
      out.write("    \t\t\t\t\tMixkyApp.showInfoMessage('操作失败', '信息提示');\n");
      out.write("    \t\t\t\t}\n");
      out.write("    \t\t\t});\n");
      out.write("            }\n");
      out.write("\n");

		if (i == tags.size() - 1) {

      out.write("\n");
      out.write("\t\t}\n");

		} else {

      out.write("\n");
      out.write("\t\t}, { \n");

		}
	}

      out.write("\n");
      out.write("      \t]\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar btnTag = new Ext.Action({\n");
      out.write("\t\ttext : '标签',\n");
      out.write("\t\ticonCls : 'icon-app-mkoa-tagmail',\n");
      out.write("\t\tmenu: tagMenu\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar btnMove = new Ext.Action({\n");
      out.write("\t\ttext : '移至',\n");
      out.write("\t\ticonCls : 'icon-app-mkoa-move',\n");
      out.write("\t\tmenu: moveMenu\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tvar btnDelete = new Ext.Action({\n");
      out.write("\t\ttext : '删除',\n");
      out.write("\t\ticonCls : 'icon-sys-delete',\n");
      out.write("\t\thandler : function(){\n");
      out.write("\t\t\tAppMailDirect.deleteMail(");
      out.print(id);
      out.write(", function(result, event) {\n");
      out.write("\t\t\t\tif (result.success) {\n");
      out.write("\t\t\t\t\tMixkyApp.showInfoMessage('删除成功', '信息提示');\n");
      out.write("\t\t\t\t\tvar tabpanel = panel.findParentByType('tabpanel');\n");
      out.write("\t\t\t\t\ttabpanel.remove(panel);\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\tMixkyApp.showInfoMessage('操作失败', '信息提示');\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\t// 刷新按钮\n");
      out.write("\tvar btnRefresh = new Ext.Action({\n");
      out.write("\t\ttext : '刷新',\n");
      out.write("\t\ticonCls : 'icon-sys-refresh',\n");
      out.write("\t\thandler : function(){\n");
      out.write("\t\t\tpanel.refresh();\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\tvar buttons = ['->', btnReply, btnReplyAll, btnFwAtt, '-', btnMove, btnTag, btnDelete, '-', btnViewHead, btnDownload, btnRefresh];\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\tvar statPanel = new Ext.Panel({\n");
      out.write("\t\ttbar : buttons,\n");
      out.write("\t    layout:'fit',\n");
      out.write("\t    border : false,\n");
      out.write("\t\tbodyCssClass : 'mixky-report-div',\n");
      out.write("\t\tautoScroll : true\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\t// 视图刷新\n");
      out.write("\tpanel.refresh = function(params){\n");
      out.write("\t\tif(Ext.isDefined(params) || !Ext.isDefined(panel.mParams)){\n");
      out.write("\t\t\tvar mParams = Ext.apply({}, params);\n");
      out.write("\t\t\tmParams.url = 'app/mkoa/mail/mail.show.details';\n");
      out.write("\t\t\tmParams.id = ");
      out.print(id);
      out.write("\n");
      out.write("\t\t\tmParams.panelid = '");
      out.print(panelid);
      out.write("'\n");
      out.write("\t\t\tpanel.mParams = mParams;\n");
      out.write("\t\t}\n");
      out.write("\t\tstatPanel.load({\n");
      out.write("\t\t\turl : 'page.do',\n");
      out.write("\t\t\tparams : panel.mParams,\n");
      out.write("\t\t\tscripts: true\n");
      out.write("\t\t});\n");
      out.write("\t};\n");
      out.write("\n");
      out.write("\tpanel.oprMail = function(id, loadType) {\n");
      out.write("\t\tvar module = MixkyApp.desktop.openModule('mkMail');\n");
      out.write("\t\tmodule.openJspUrl(\n");
      out.write("\t\t\t'mail' + loadType + id, \n");
      out.write("\t\t\t'app/mkoa/mail/mail.draft', \n");
      out.write("\t\t\t{\n");
      out.write("\t\t\t\tid: id,\n");
      out.write("\t\t\t\tloadType: loadType\n");
      out.write("\t\t\t}, {\n");
      out.write("\t\t\t\tautoScroll:true, \n");
      out.write("\t\t\t\ttitle:'写邮件', \n");
      out.write("\t\t\t\tlayout:'fit'\n");
      out.write("\t\t\t}\n");
      out.write("\t\t);\n");
      out.write("\t};\n");
      out.write("\t\n");
      out.write("\t// 输出附加脚本 end\n");
      out.write("\tpanel.add(statPanel);\n");
      out.write("\tpanel.doLayout();\n");
      out.write("\t// 初始化视图数据\n");
      out.write("\tpanel.refresh(panel.initParams);\n");
      out.write("});\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
